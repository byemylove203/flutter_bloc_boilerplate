io.sentry.android.ndk.SentryNdk
androidx.window.embedding.SplitRule
androidx.savedstate.Recreator
androidx.window.layout.EmptyDecorator
androidx.window.layout.ActivityCompatHelperApi24
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
io.sentry.android.ndk.NativeModuleListLoader
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.embedding.SplitController$Companion
androidx.core.app.CoreComponentFactory
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.sentry.android.core.LifecycleWatcher
androidx.core.graphics.drawable.IconCompatParcelizer
io.sentry.flutter.R$integer
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
io.sentry.android.ndk.NativeScope
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.R$styleable
io.flutter.plugins.urllauncher.WebViewActivity
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.WindowInfoTracker
io.sentry.flutter.BuildConfig
androidx.window.embedding.MatcherUtils
androidx.core.app.RemoteActionCompat
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.java.R
io.flutter.view.FlutterCallbackInformation
androidx.window.embedding.SplitInfo
androidx.activity.ComponentActivity$2
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.savedstate.SavedStateRegistry$1
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.embedding.EmbeddingCompat
io.sentry.flutter.R$string
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.SidecarCompat$DistinctElementCallback
io.sentry.flutter.R$id
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14
androidx.window.layout.WindowBackend
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.layout.DisplayFeature
android.support.v4.app.RemoteActionCompatParcelizer
io.flutter.plugins.imagepicker.ImagePickerFileProvider
io.flutter.embedding.engine.FlutterJNI
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.core.Version
androidx.window.embedding.SplitController
androidx.window.core.Bounds
io.flutter.plugins.GeneratedPluginRegistrant
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
io.sentry.flutter.R$drawable
io.sentry.flutter.SentryFlutterPlugin
androidx.lifecycle.DefaultLifecycleObserver
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.window.embedding.EmbeddingAdapter
com.example.flutter_advanced_boilerplate.MainActivity
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.SidecarWindowBackend
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
io.sentry.protocol.DebugImage
androidx.window.layout.SidecarCompat
io.sentry.flutter.SentryFlutterPluginKt
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.HardwareFoldingFeature
androidx.window.embedding.EmbeddingBackend
io.sentry.flutter.R$layout
androidx.versionedparcelable.ParcelImpl
androidx.window.layout.SidecarWindowBackend$Companion
androidx.lifecycle.SingleGeneratedAdapterObserver
kotlinx.coroutines.android.AndroidDispatcherFactory
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.R$attr
androidx.lifecycle.ProcessLifecycleOwnerInitializer
androidx.window.embedding.SplitRule$LayoutDir
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.window.embedding.ActivityStack
androidx.window.embedding.SplitRuleParser
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.embedding.EmbeddingTranslatingCallback
io.sentry.android.core.SentryAndroidOptions
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7
androidx.window.layout.WindowLayoutInfo
androidx.window.layout.FoldingFeature
androidx.window.core.ExperimentalWindowApi
io.sentry.flutter.R
androidx.core.view.ScrollingView
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.embedding.SplitPairRule
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1
androidx.core.graphics.drawable.IconCompat
io.sentry.flutter.R$style
androidx.lifecycle.Lifecycling$1
androidx.activity.ComponentActivity$3
kotlinx.coroutines.internal.StackTraceRecoveryKt
io.flutter.view.AccessibilityViewEmbedder
androidx.window.embedding.SplitPlaceholderRule
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowInfoTrackerDecorator
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5
kotlin.internal.jdk7.JDK7PlatformImplementations
io.sentry.flutter.R$dimen
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.ActivityFilter
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.sentry.android.core.SentryPerformanceProvider
androidx.fragment.app.Fragment$2
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.FoldingFeature$State
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.embedding.ActivityRule
io.sentry.flutter.R$styleable
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.window.layout.HardwareFoldingFeature$Type
androidx.annotation.Keep
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18
androidx.window.layout.WindowMetricsCalculator
androidx.window.embedding.EmptyEmbeddingComponent
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.core.Version$Companion
androidx.window.layout.SidecarCompat$Companion
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12
androidx.window.layout.ExtensionInterfaceCompat
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.R$id
androidx.window.embedding.SplitPairFilter
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.SidecarAdapter$Companion
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.core.view.GestureDetectorCompat
androidx.lifecycle.ProcessLifecycleOwner
kotlinx.coroutines.internal.MainDispatcherFactory
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.R
androidx.window.layout.ActivityCompatHelperApi30
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
io.sentry.flutter.R$attr
androidx.window.layout.FoldingFeature$Orientation
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15
androidx.window.layout.DisplayCompatHelperApi28
androidx.core.app.FrameMetricsAggregator
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.sentry.flutter.R$color
androidx.window.layout.SidecarAdapter
io.flutter.embedding.engine.FlutterOverlaySurface
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.EmbeddingCompat$Companion
kotlinx.coroutines.CoroutineExceptionHandler
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.layout.WindowInfoTrackerImpl
androidx.versionedparcelable.CustomVersionedParcelable
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.layout.WindowMetrics
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
io.sentry.SentryOptions: boolean sendDefaultPii
com.google.crypto.tink.proto.KeyTypeEntry: int KEY_MANAGER_VERSION_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
io.sentry.SentryOptions: boolean enableExternalConfiguration
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.google.crypto.tink.proto.EncryptedKeyset: int ENCRYPTED_KEYSET_FIELD_NUMBER
io.sentry.DataCategory: io.sentry.DataCategory Security
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
io.sentry.Session$State: io.sentry.Session$State Ok
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration SECOND
io.sentry.SentryOptions: java.lang.String proguardUuid
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyData keyData_
io.sentry.flutter.R$drawable: int notification_action_background
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$styleable: int[] SplitPairFilter
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
io.sentry.flutter.R$drawable: int notification_template_icon_bg
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.sentry.SpanStatus: io.sentry.SpanStatus UNAVAILABLE
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.sentry.flutter.R$styleable: int[] ColorStateListItem
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: java.lang.Long idleTimeout
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory sslSocketFactory
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
io.sentry.flutter.R$dimen: int notification_subtext_size
io.sentry.SentryOptions: java.util.List defaultTracePropagationTargets
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.proto.AesCtrParams DEFAULT_INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String catalogueName_
androidx.window.core.Version: int major
io.sentry.flutter.R$id: int tag_accessibility_heading
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
io.sentry.android.core.SentryAndroidOptions: boolean enableSystemEventBreadcrumbs
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $VALUES
androidx.window.core.Bounds: int right
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason NETWORK_ERROR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.sentry.flutter.R$styleable: int SplitPairRule_splitMinWidth
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.proto.AesGcmKey DEFAULT_INSTANCE
io.sentry.SpanStatus: io.sentry.SpanStatus ABORTED
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
io.sentry.SpanStatus: io.sentry.SpanStatus UNIMPLEMENTED
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.crypto.tink.shaded.protobuf.FieldSet extensions
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status CONNECTED
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKeyFormat params_
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate DEFAULT_INSTANCE
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.sentry.flutter.R$attr: int font
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
io.sentry.SentryOptions: java.lang.String dsn
io.sentry.SentryItemType: io.sentry.SentryItemType UserFeedback
androidx.window.R$attr: int secondaryActivityName
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.sentry.SentryOptions: boolean enableUserInteractionTracing
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXBIBYTE
io.sentry.SentryOptions: boolean enableUncaughtExceptionHandler
androidx.window.layout.FoldingFeature$State: java.lang.String description
io.sentry.DataCategory: io.sentry.DataCategory[] $VALUES
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrKey aesCtrKey_
androidx.window.core.Bounds: int bottom
io.sentry.flutter.R$styleable: int SplitPairRule_splitMinSmallestWidth
io.sentry.SentryLevel: io.sentry.SentryLevel DEBUG
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.crypto.tink.proto.AesCmacKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int right_side
io.sentry.flutter.R$id: int tag_on_apply_window_listener
kotlin.jvm.internal.FunctionReference: int flags
io.sentry.SentryOptions: java.util.List inAppExcludes
com.google.crypto.tink.proto.AesEaxKey: int VERSION_FIELD_NUMBER
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
io.sentry.flutter.R$integer: int status_bar_notification_info_maxnum
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
io.sentry.flutter.R$attr: int fontProviderFetchStrategy
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
io.sentry.flutter.R$styleable: int GradientColor_android_startColor
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.crypto.tink.proto.KmsAeadKeyFormat: int KEY_URI_FIELD_NUMBER
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat params_
androidx.window.core.Bounds: int top
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.crypto.tink.proto.HmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitRatio
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.sentry.SentryOptions: int connectionTimeoutMillis
com.google.crypto.tink.proto.RegistryConfig: java.lang.String configName_
com.google.crypto.tink.proto.KmsAeadKey: int version_
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.sentry.flutter.R$id: int rtl
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacParams params_
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.crypto.tink.proto.Keyset: int PRIMARY_KEY_ID_FIELD_NUMBER
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
io.sentry.DataCategory: io.sentry.DataCategory Unknown
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
io.sentry.flutter.R$styleable: int FontFamily_fontProviderFetchTimeout
io.sentry.SentryOptions: java.lang.String sentryClientName
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.crypto.tink.proto.KeyTypeEntry: int CATALOGUE_NAME_FIELD_NUMBER
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.R$styleable: int SplitPairRule_clearTop
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason SAMPLE_RATE
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason EVENT_PROCESSOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
io.sentry.flutter.R$styleable: int SplitPairFilter_secondaryActivityAction
io.sentry.protocol.DebugImage: java.lang.String PROGUARD
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: java.lang.String typeUrl_
io.sentry.flutter.R$attr: int fontProviderSystemFontFamily
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader modulesLoader
com.google.crypto.tink.proto.AesCmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
io.sentry.flutter.R$id: int chronometer
io.sentry.flutter.R$dimen: int compat_button_padding_horizontal_material
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.sentry.flutter.R$styleable: int[] FontFamily
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback beforeSend
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.sentry.flutter.R$styleable: int FontFamily_fontProviderAuthority
io.sentry.flutter.R$id: int ltr
io.sentry.flutter.R$drawable: int notification_bg_low_normal
io.sentry.SentryItemType: java.lang.String itemType
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList key_
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
io.sentry.flutter.R$styleable: int ActivityFilter_activityAction
io.sentry.SentryOptions: int maxCacheItems
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN
io.sentry.clientreport.DiscardReason: java.lang.String reason
com.google.crypto.tink.proto.AesEaxKey: int version_
io.sentry.SentryLevel: io.sentry.SentryLevel WARNING
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector transactionPerformanceCollector
io.sentry.flutter.R$styleable: int GradientColor_android_endY
com.google.crypto.tink.proto.AesGcmKey: int version_
io.sentry.flutter.R$styleable: int ColorStateListItem_android_lStar
com.google.crypto.tink.proto.AesSivKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$styleable: int SplitPairRule_clearTop
com.google.crypto.tink.proto.KeyTypeEntry: int keyManagerVersion_
io.sentry.flutter.R$id: int accessibility_custom_action_24
com.google.crypto.tink.proto.KeyData: java.lang.String typeUrl_
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.sentry.flutter.R$id: int info
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.sentry.SentryOptions: java.util.List contextTags
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation LANDSCAPE
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: io.sentry.SentryLevel diagnosticLevel
androidx.window.embedding.ActivityRule: boolean alwaysExpand
io.sentry.SentryItemType: io.sentry.SentryItemType Profile
io.sentry.flutter.BuildConfig: java.lang.String BUILD_TYPE
androidx.window.R$attr: int splitMinSmallestWidth
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction RATIO
io.sentry.flutter.R$styleable: int GradientColorItem_android_offset
androidx.window.R$attr: int finishSecondaryWithPrimary
io.sentry.SentryOptions: boolean attachThreads
io.sentry.flutter.R$dimen: int notification_large_icon_height
io.sentry.android.core.SentryAndroidOptions: boolean enableAppLifecycleBreadcrumbs
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
io.sentry.flutter.R$id: int accessibility_custom_action_29
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
io.sentry.Session$State: io.sentry.Session$State Abnormal
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: io.sentry.android.core.SentryAndroidOptions $options
com.google.crypto.tink.proto.AesEaxKeyFormat: int PARAMS_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_20
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIBIBYTE
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.crypto.tink.proto.AesSivKeyFormat: int keySize_
io.sentry.flutter.R$id: int notification_main_column
io.sentry.flutter.R$layout: int notification_template_part_time
io.sentry.SentryOptions: java.lang.Double sampleRate
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacParams params_
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TEBIBYTE
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEBIBYTE
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback beforeSendTransaction
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback beforeBreadcrumb
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
io.sentry.SentryOptions: boolean enableShutdownHook
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.R$attr: int alwaysExpand
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
io.sentry.SentryOptions: boolean enableNdk
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.sentry.SentryItemType: io.sentry.SentryItemType Transaction
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource ROUTE
io.sentry.SentryOptions: java.util.List tracePropagationTargets
io.sentry.flutter.R$id: int accessibility_custom_action_10
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.window.embedding.ActivityRule: java.util.Set filters
io.sentry.SentryOptions: io.sentry.ITransportFactory transportFactory
io.sentry.SentryOptions: io.sentry.ILogger logger
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.proto.KeysetInfo DEFAULT_INSTANCE
io.sentry.flutter.R$id: int accessibility_custom_action_18
io.sentry.flutter.R$styleable: int FontFamily_fontProviderCerts
io.sentry.flutter.R$styleable: int FontFamilyFont_fontWeight
io.sentry.flutter.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.crypto.tink.proto.AesCtrKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
io.sentry.flutter.R$styleable: int FontFamily_fontProviderSystemFontFamily
io.sentry.flutter.R$styleable: int GradientColor_android_type
androidx.window.core.Version: int minor
androidx.window.layout.SidecarAdapter: java.lang.String TAG
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $VALUES
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int DEK_TEMPLATE_FIELD_NUMBER
androidx.window.R$id: int ltr
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $VALUES
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int version_
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKey DEFAULT_INSTANCE
kotlin.jvm.internal.FunctionReference: int arity
io.sentry.flutter.R$layout: int notification_template_icon_group
io.sentry.SpanStatus: io.sentry.SpanStatus ALREADY_EXISTS
io.sentry.android.core.SentryAndroidOptions: long startupCrashDurationThresholdMillis
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
io.sentry.protocol.DebugImage: java.lang.String debugFile
io.sentry.flutter.R$attr: int fontProviderPackage
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader debugImagesLoader
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.R$attr: int finishPrimaryWithSecondary
io.sentry.flutter.SentryFlutterPlugin: java.lang.String flutterSdk
io.sentry.flutter.R$id: int icon_group
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.sentry.SentryLevel: io.sentry.SentryLevel FATAL
io.sentry.android.core.SentryAndroidOptions: boolean enableAppComponentBreadcrumbs
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.flutter.R$id: int accessibility_custom_action_12
io.sentry.flutter.R$attr: int splitLayoutDirection
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.crypto.tink.proto.KeyTemplate: java.lang.String typeUrl_
io.sentry.flutter.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int version_
io.sentry.flutter.R$dimen: int notification_top_pad
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken STRING
io.sentry.flutter.R$styleable: int[] SplitPairRule
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
io.sentry.SpanStatus: io.sentry.SpanStatus NOT_FOUND
androidx.window.R$attr: int clearTop
io.sentry.android.core.SentryAndroidOptions: boolean attachScreenshot
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesCmacParams: int tagSize_
io.sentry.flutter.R$id: int accessibility_custom_action_15
com.google.crypto.tink.proto.AesGcmKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat DEFAULT_INSTANCE
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
io.sentry.SentryOptions: boolean traceSampling
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
io.sentry.flutter.R$dimen: int notification_big_circle_margin
io.sentry.flutter.R$styleable: int GradientColor_android_endColor
com.google.crypto.tink.proto.AesCtrKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int line1
com.google.crypto.tink.proto.Keyset: int primaryKeyId_
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.proto.AesGcmKeyFormat DEFAULT_INSTANCE
io.sentry.SentryOptions: boolean enableScopeSync
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KeyTypeEntry: int PRIMITIVE_NAME_FIELD_NUMBER
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: java.util.List integrations
io.sentry.flutter.R$id: int accessibility_custom_action_5
io.sentry.Session$State: io.sentry.Session$State Exited
io.sentry.flutter.R$layout: int notification_template_part_chronometer
io.sentry.flutter.R$dimen: int compat_button_inset_horizontal_material
io.sentry.SpanStatus: io.sentry.SpanStatus PERMISSION_DENIED
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_1
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
io.sentry.flutter.R$drawable: int notification_icon_background
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] $VALUES
io.sentry.SpanStatus: io.sentry.SpanStatus OUT_OF_RANGE
io.sentry.SentryOptions: javax.net.ssl.HostnameVerifier hostnameVerifier
com.google.crypto.tink.proto.Keyset$Key: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayEvent
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int version_
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN_ERROR
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.sentry.flutter.R$dimen: int notification_small_icon_background_padding
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: java.lang.String kekUri_
io.sentry.flutter.R$dimen: int notification_action_text_size
com.google.crypto.tink.proto.AesCtrParams: int ivSize_
io.sentry.SentryOptions: java.lang.Double profilesSampleRate
io.sentry.flutter.BuildConfig: boolean DEBUG
io.sentry.flutter.R$id: int accessibility_custom_action_19
io.sentry.android.core.SentryAndroidOptions: boolean anrReportInDebug
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.crypto.tink.proto.AesCmacKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.google.crypto.tink.proto.AesSivKeyFormat: int version_
com.google.crypto.tink.proto.AesCtrKey: int version_
io.sentry.flutter.R$dimen: int notification_right_side_padding_top
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
io.sentry.flutter.R$id: int accessibility_custom_action_26
io.sentry.flutter.R$id: int accessibility_custom_action_30
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration DAY
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.sentry.flutter.R$attr: int primaryActivityName
io.sentry.flutter.R$styleable: int FontFamilyFont_ttcIndex
io.sentry.protocol.DebugImage: java.lang.String arch
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.google.crypto.tink.proto.HmacKeyFormat: int VERSION_FIELD_NUMBER
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
io.sentry.flutter.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
io.sentry.SentryOptions: java.util.List gestureTargetLocators
io.sentry.SentryOptions: java.lang.Double tracesSampleRate
io.sentry.SentryOptions: long maxTraceFileSize
io.sentry.flutter.R$layout: int notification_action_tombstone
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int AES_CTR_KEY_FORMAT_FIELD_NUMBER
io.sentry.SentryOptions: boolean sendClientReports
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.sentry.SentryOptions: java.util.Map tags
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.crypto.tink.proto.AesGcmKeyFormat: int keySize_
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
io.sentry.android.core.SentryAndroidOptions: boolean attachViewHierarchy
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.proto.AesEaxParams DEFAULT_INSTANCE
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.R$styleable: int[] SplitPairRule
io.sentry.SentryLevel: io.sentry.SentryLevel INFO
io.sentry.flutter.R$drawable: int notification_bg_normal_pressed
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.sentry.SentryOptions: io.sentry.SentryDateProvider dateProvider
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXABYTE
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $VALUES
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.core.Bounds: int left
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.sentry.protocol.DebugImage: java.util.Map unknown
io.sentry.protocol.DebugImage: java.lang.String uuid
io.sentry.flutter.R$id: int tag_window_insets_animation_callback
androidx.window.R$attr: int primaryActivityName
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int HMAC_KEY_FORMAT_FIELD_NUMBER
com.google.crypto.tink.proto.HmacKeyFormat: int keySize_
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesEaxParams: int IV_SIZE_FIELD_NUMBER
io.sentry.flutter.R$attr: int finishPrimaryWithSecondary
io.sentry.flutter.R$dimen: int notification_media_narrow_margin
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int KEY_ID_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_8
io.sentry.protocol.DebugImage: java.lang.String imageAddr
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.crypto.tink.proto.RegistryConfig: int ENTRY_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.protocol.DebugImage: java.lang.String debugId
io.sentry.flutter.R$attr: int nestedScrollViewStyle
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder clientReportRecorder
io.sentry.SentryItemType: io.sentry.SentryItemType ClientReport
io.sentry.flutter.R$attr: int shortcutMatchRequired
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.proto.RegistryConfig DEFAULT_INSTANCE
io.sentry.flutter.R$dimen: int notification_content_margin_start
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
io.sentry.android.core.SentryAndroidOptions: boolean enableFramesTracking
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxKeyFormat DEFAULT_INSTANCE
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
io.sentry.flutter.R$id: int text
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: io.sentry.android.core.SentryAndroidOptions $options
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
io.sentry.flutter.R$attr: int clearTop
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
io.sentry.flutter.R$drawable: int notification_bg_low_pressed
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy proxy
kotlin.jvm.internal.Lambda: int arity
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList entry_
io.sentry.flutter.R$attr: int fontProviderFetchTimeout
io.sentry.flutter.R$id: int accessibility_custom_action_28
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite unknownFields
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.sentry.SpanStatus: io.sentry.SpanStatus FAILED_PRECONDITION
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource COMPONENT
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KeyTemplate dekTemplate_
io.sentry.flutter.R$styleable: int ActivityFilter_activityName
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
io.sentry.DataCategory: io.sentry.DataCategory UserReport
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.SpanStatus: io.sentry.SpanStatus[] $VALUES
io.sentry.flutter.R$styleable: int GradientColor_android_gradientRadius
io.sentry.flutter.R$styleable: int ActivityRule_alwaysExpand
androidx.window.R$styleable: int ActivityFilter_activityAction
io.sentry.flutter.R$id: int accessibility_custom_action_21
io.sentry.SentryOptions: long shutdownTimeoutMillis
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.crypto.tink.proto.KmsAeadKeyFormat: java.lang.String keyUri_
io.sentry.flutter.R$id: int notification_background
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MINUTE
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
io.sentry.flutter.R$styleable: int[] ActivityRule
io.sentry.flutter.R$dimen: int compat_notification_large_icon_max_height
io.sentry.flutter.R$styleable: int GradientColorItem_android_color
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
io.sentry.flutter.R$id: int tag_on_receive_content_listener
io.sentry.flutter.R$styleable: int ColorStateListItem_android_color
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
io.sentry.SpanStatus: io.sentry.SpanStatus UNAUTHENTICATED
io.sentry.flutter.R$attr: int ttcIndex
io.sentry.SentryOptions: boolean enableAutoSessionTracking
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList keyInfo_
io.sentry.flutter.R$id: int tag_transition_group
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$id: int tag_accessibility_actions
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.crypto.tink.proto.AesCtrKey: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.Keyset$Key: int KEY_DATA_FIELD_NUMBER
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat DEFAULT_INSTANCE
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MILLISECOND
io.sentry.SentryOptions: java.lang.String dist
io.sentry.SentryOptions: int maxQueueSize
io.sentry.DataCategory: io.sentry.DataCategory Session
io.sentry.protocol.DebugImage: java.lang.Long imageSize
io.sentry.SentryOptions: io.sentry.IEnvelopeReader envelopeReader
com.google.crypto.tink.proto.HmacParams: int HASH_FIELD_NUMBER
io.sentry.SentryOptions: boolean debug
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_ARRAY
io.sentry.flutter.R$id: int accessibility_custom_action_31
io.sentry.flutter.R$id: int locale
com.google.crypto.tink.proto.KeyTypeEntry: int NEW_KEY_ALLOWED_FIELD_NUMBER
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NAME
io.sentry.flutter.R$styleable: int FontFamilyFont_android_font
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.crypto.tink.proto.AesEaxParams: int ivSize_
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Title
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat aesCtrKeyFormat_
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.sentry.flutter.R$dimen: int notification_right_icon_size
com.google.crypto.tink.proto.AesGcmKeyFormat: int version_
com.google.crypto.tink.proto.HmacKeyFormat: int version_
io.sentry.flutter.R$id: int accessibility_custom_action_17
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
io.sentry.flutter.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.crypto.tink.proto.AesEaxKeyFormat: int KEY_SIZE_FIELD_NUMBER
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason CACHE_OVERFLOW
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.crypto.tink.proto.KmsAeadKey: int VERSION_FIELD_NUMBER
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.google.crypto.tink.proto.Keyset$Key: int KEY_ID_FIELD_NUMBER
io.sentry.flutter.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
kotlin.jvm.internal.CallableReference: boolean isTopLevel
io.sentry.flutter.R$attr: int splitRatio
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.proto.XChaCha20Poly1305Key DEFAULT_INSTANCE
io.sentry.flutter.R$id: int text2
io.sentry.flutter.R$styleable: int ColorStateListItem_android_alpha
io.sentry.SentryOptions: java.lang.String dsnHash
io.sentry.SentryOptions: java.util.List collectors
io.sentry.flutter.R$color: int androidx_core_ripple_material_light
io.sentry.SentryOptions: boolean printUncaughtStackTrace
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.sentry.Session$State: io.sentry.Session$State Crashed
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TERABYTE
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrParams params_
io.sentry.flutter.R$styleable: int SplitPairRule_splitRatio
io.sentry.SentryLevel: io.sentry.SentryLevel[] $VALUES
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource URL
io.sentry.flutter.R$color: int androidx_core_secondary_text_default_material_light
io.sentry.flutter.R$id: int view_tree_lifecycle_owner
com.google.crypto.tink.proto.AesSivKey: int version_
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrKey DEFAULT_INSTANCE
androidx.window.R$styleable: int ActivityFilter_activityName
io.sentry.flutter.SentryFlutterPlugin: java.lang.String androidSdk
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEGABYTE
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int TYPE_URL_FIELD_NUMBER
io.sentry.flutter.R$id: int forever
io.sentry.android.core.SentryAndroidOptions: boolean anrEnabled
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback profilesSampler
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int PARAMS_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_7
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
io.sentry.flutter.R$id: int right_icon
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.crypto.tink.proto.AesCmacKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
io.sentry.flutter.R$drawable: int notify_panel_notification_icon_bg
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKey DEFAULT_INSTANCE
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.SentryOptions: boolean attachServerName
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.R$attr: int activityName
io.sentry.android.core.SentryAndroidOptions: int profilingTracesHz
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.sentry.SentryOptions: io.sentry.ITransactionProfiler transactionProfiler
io.sentry.flutter.R$attr: int fontStyle
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize maxRequestBodySize
io.sentry.android.core.SentryAndroidOptions: boolean enableAutoActivityLifecycleTracing
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache envelopeDiskCache
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.sentry.flutter.R$id: int tag_unhandled_key_listeners
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxParams params_
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status[] $VALUES
io.sentry.flutter.R$attr: int splitMinSmallestWidth
io.sentry.flutter.R$id: int accessibility_custom_action_13
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
io.sentry.flutter.SentryFlutterPlugin: boolean autoPerformanceTrackingEnabled
io.sentry.DataCategory: io.sentry.DataCategory Default
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
io.sentry.SentryOptions: long maxAttachmentSize
io.sentry.flutter.R$styleable: int GradientColor_android_endX
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxParams params_
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
io.sentry.flutter.R$id: int accessibility_custom_action_2
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type CLICKABLE
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.sentry.flutter.R$dimen: int notification_top_pad_large_text
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat DEFAULT_INSTANCE
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String primitiveName_
io.sentry.flutter.SentryFlutterPlugin: java.lang.ref.WeakReference activity
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.sentry.flutter.R$id: int line3
com.google.crypto.tink.proto.AesSivKeyFormat: int VERSION_FIELD_NUMBER
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.proto.AesSivKey DEFAULT_INSTANCE
io.sentry.SpanStatus: io.sentry.SpanStatus RESOURCE_EXHAUSTED
io.sentry.flutter.R$id: int accessibility_custom_action_0
io.sentry.flutter.R$drawable: int notification_template_icon_low_bg
io.sentry.flutter.R$id: int blocking
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$styleable: int GradientColor_android_startX
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: io.sentry.android.core.SentryAndroidOptions $options
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.sentry.flutter.R$dimen: int notification_action_icon_size
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int STATUS_FIELD_NUMBER
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.HmacKey: int version_
com.google.crypto.tink.proto.AesCtrParams: int IV_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.google.crypto.tink.proto.KeyData: int TYPE_URL_FIELD_NUMBER
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacKey DEFAULT_INSTANCE
io.sentry.Instrumenter: io.sentry.Instrumenter OTEL
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.ByteString value_
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.layout.SidecarCompat: java.lang.String TAG
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData DEFAULT_INSTANCE
io.sentry.flutter.R$id: int accessibility_custom_action_9
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.sentry.flutter.R$attr: int secondaryActivityName
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KILOBYTE
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize NONE
io.sentry.protocol.DebugImage: java.lang.String type
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int AES_CTR_KEY_FIELD_NUMBER
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.sentry.flutter.R$attr: int splitMinWidth
io.sentry.flutter.R$attr: int activityAction
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacParams params_
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NULL
io.sentry.SentryOptions: io.sentry.SentryLevel DEFAULT_DIAGNOSTIC_LEVEL
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.sentry.SpanStatus: io.sentry.SpanStatus DEADLINE_EXCEEDED
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BIT
io.sentry.flutter.R$id: int action_divider
io.sentry.flutter.R$styleable: int[] GradientColorItem
io.sentry.SentryOptions: long sessionTrackingIntervalMillis
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Time
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize SMALL
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.Keyset$Key: int STATUS_FIELD_NUMBER
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.proto.AesGcmSivKey DEFAULT_INSTANCE
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$attr: int finishSecondaryWithPrimary
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlinx.coroutines.channels.ArrayChannel: int size
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
io.sentry.flutter.R$dimen: int compat_notification_large_icon_max_width
com.google.crypto.tink.proto.AesCtrKeyFormat: int KEY_SIZE_FIELD_NUMBER
io.sentry.flutter.R$styleable: int[] FontFamilyFont
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
io.sentry.flutter.R$layout: int custom_dialog
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
io.sentry.SentryItemType: io.sentry.SentryItemType Attachment
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$attr: int alpha
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
io.sentry.SentryOptions: java.util.List eventProcessors
com.google.crypto.tink.proto.EncryptedKeyset: int KEYSET_INFO_FIELD_NUMBER
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $VALUES
io.sentry.SpanStatus: io.sentry.SpanStatus OK
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.ByteString value_
com.google.crypto.tink.proto.HmacParams: int TAG_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.KeyTypeEntry: boolean newKeyAllowed_
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_OBJECT
com.google.crypto.tink.proto.AesCtrKeyFormat: int keySize_
io.sentry.SentryOptions: java.util.List observers
androidx.window.R$id: int locale
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int version_
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BEFORE_SEND
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.crypto.tink.proto.Keyset$Key: int keyId_
androidx.window.embedding.SplitInfo: float splitRatio
io.sentry.flutter.R$styleable: int FontFamilyFont_font
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat DEFAULT_INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.window.R$attr: int placeholderActivityName
io.sentry.protocol.DebugImage: java.lang.String codeFile
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
io.sentry.SentryOptions: java.util.Set ignoredExceptionsForType
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int version_
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion sdkVersion
androidx.window.R$attr: int activityAction
io.sentry.SentryOptions: io.sentry.ISerializer serializer
io.sentry.flutter.R$styleable: int GradientColor_android_centerY
io.sentry.flutter.R$attr: int alwaysExpand
io.sentry.flutter.R$styleable: int SplitPairRule_splitLayoutDirection
io.sentry.flutter.R$id: int dialog_button
io.sentry.flutter.R$layout: int notification_action
com.google.crypto.tink.proto.KeyData: int keyMaterialType_
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int outputPrefixType_
io.sentry.flutter.R$attr: int queryPatterns
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_DOCUMENT
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleTracingAutoFinish
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NUMBER
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
com.google.crypto.tink.proto.AesGcmKey: int KEY_VALUE_FIELD_NUMBER
io.sentry.flutter.R$styleable: int FontFamily_fontProviderFetchStrategy
io.sentry.SentryItemType: io.sentry.SentryItemType ReplayRecording
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.embedding.SplitRule: float splitRatio
com.google.crypto.tink.proto.AesCmacParams: int TAG_SIZE_FIELD_NUMBER
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.sentry.SentryOptions: int maxBreadcrumbs
com.google.crypto.tink.proto.KeyData: int KEY_MATERIAL_TYPE_FIELD_NUMBER
androidx.window.R$id: int rtl
androidx.window.R$styleable: int[] ActivityRule
io.sentry.SentryOptions: java.lang.String serverName
io.sentry.flutter.R$string: int status_bar_notification_info_overflow
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize MEDIUM
io.sentry.flutter.R$id: int title
io.sentry.flutter.R$styleable: int Capability_queryPatterns
com.google.crypto.tink.proto.KeysetInfo: int KEY_INFO_FIELD_NUMBER
io.sentry.DataCategory: io.sentry.DataCategory Error
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.sentry.flutter.R$attr: int activityName
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker mainThreadChecker
io.sentry.flutter.R$color: int notification_action_color_filter
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.crypto.tink.proto.KmsAeadKey: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.proto.HmacParams DEFAULT_INSTANCE
io.sentry.flutter.R$id: int notification_main_column_container
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
io.sentry.flutter.R$styleable: int FontFamily_fontProviderPackage
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
io.sentry.SentryItemType: io.sentry.SentryItemType Session
io.sentry.SentryItemType: io.sentry.SentryItemType Unknown
com.google.crypto.tink.proto.KeyData: int VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.AesSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation PORTRAIT
io.sentry.flutter.R$id: int actions
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int KEK_URI_FIELD_NUMBER
com.google.crypto.tink.proto.HmacKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.crypto.tink.proto.AesCmacKey: int version_
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_ARRAY
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
io.sentry.flutter.R$id: int action_image
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
io.sentry.SentryOptions: int maxSpans
io.sentry.flutter.R$id: int tag_on_receive_content_mime_types
io.sentry.flutter.SentryFlutterPlugin: android.content.Context context
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PEBIBYTE
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.SentryOptions: io.sentry.ISentryExecutorService executorService
io.sentry.SentryOptions: java.lang.String distinctId
io.sentry.protocol.DebugImage: java.lang.String codeId
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MICROSECOND
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration HOUR
androidx.window.R$attr: int secondaryActivityAction
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrParams params_
androidx.window.R$attr: int splitRatio
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_OBJECT
io.sentry.flutter.R$id: int normal
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: boolean sDebug
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.proto.AesGcmSivKeyFormat DEFAULT_INSTANCE
io.sentry.flutter.R$dimen: int compat_control_corner_material
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.sentry.flutter.R$id: int accessibility_custom_action_6
com.google.crypto.tink.proto.AesEaxKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
io.sentry.flutter.R$styleable: int[] Capability
io.sentry.SentryOptions: io.sentry.transport.ITransportGate transportGate
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Info
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.core.ActivityFramesTracker framesTracker
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $VALUES
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_22
io.sentry.flutter.R$id: int async
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
io.sentry.flutter.R$styleable: int GradientColor_android_startY
io.sentry.flutter.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
io.sentry.SentryOptions: int readTimeoutMillis
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacParams params_
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontWeight
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason RATELIMIT_BACKOFF
io.sentry.flutter.R$id: int tag_unhandled_key_event_manager
io.sentry.flutter.R$id: int accessibility_custom_action_3
io.sentry.flutter.R$drawable: int notification_tile_bg
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.SpanStatus: int minHttpStatusCode
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacKeyFormat DEFAULT_INSTANCE
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$styleable: int GradientColor_android_centerColor
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.sentry.flutter.R$dimen: int compat_button_inset_vertical_material
io.sentry.flutter.R$attr: int placeholderActivityName
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String typeUrl_
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.ByteString encryptedKeyset_
io.sentry.flutter.R$drawable: int notification_bg
io.sentry.flutter.R$styleable: int GradientColor_android_tileMode
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PETABYTE
io.sentry.SpanStatus: io.sentry.SpanStatus INTERNAL_ERROR
androidx.window.R$styleable: int ActivityRule_alwaysExpand
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset DEFAULT_INSTANCE
androidx.window.R$attr: int splitLayoutDirection
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.sentry.flutter.R$drawable: int notification_bg_normal
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
io.sentry.flutter.R$styleable: int[] ActivityFilter
io.sentry.flutter.R$id: int accessibility_action_clickable_span
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
io.sentry.android.core.SentryAndroidOptions: long startupCrashFlushTimeoutMillis
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIGABYTE
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.flutter.R$id: int accessibility_custom_action_4
com.google.crypto.tink.proto.KeyTemplate: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_25
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.sentry.DataCategory: io.sentry.DataCategory All
androidx.window.R$attr: int splitMinWidth
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction PERCENT
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.proto.AesCmacParams DEFAULT_INSTANCE
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.proto.ChaCha20Poly1305Key DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesGcmSivKey: int KEY_VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.KeysetInfo keysetInfo_
io.sentry.SentryOptions: int maxDepth
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status NOT_CONNECTED
io.sentry.SentryItemType: io.sentry.SentryItemType[] $VALUES
io.sentry.flutter.R$styleable: int FontFamilyFont_fontVariationSettings
io.sentry.flutter.R$styleable: int FontFamilyFont_fontStyle
com.google.crypto.tink.proto.AesGcmKeyFormat: int VERSION_FIELD_NUMBER
io.sentry.SentryOptions: io.sentry.Instrumenter instrumenter
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.sentry.flutter.R$id: int tag_screen_reader_focusable
io.sentry.SpanStatus: io.sentry.SpanStatus INVALID_ARGUMENT
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.sentry.SentryOptions: boolean traceOptionsRequests
io.sentry.SpanStatus: int maxHttpStatusCode
io.sentry.flutter.R$id: int tag_accessibility_pane_title
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KIBIBYTE
com.google.crypto.tink.proto.KeysetInfo: int primaryKeyId_
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat hmacKeyFormat_
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BOOLEAN
io.sentry.flutter.R$drawable: int notification_bg_low
io.sentry.flutter.R$id: int italic
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
io.sentry.flutter.R$id: int time
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
io.sentry.flutter.R$dimen: int compat_button_padding_vertical_material
androidx.window.embedding.SplitPairRule: boolean clearTop
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource TASK
androidx.window.embedding.SplitRule: int minWidth
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize ALWAYS
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.proto.AesSivKeyFormat DEFAULT_INSTANCE
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason QUEUE_OVERFLOW
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status UNKNOWN
io.sentry.flutter.R$styleable: int GradientColor_android_centerX
com.google.crypto.tink.proto.HmacKey: int PARAMS_FIELD_NUMBER
io.sentry.SentryItemType: io.sentry.SentryItemType Event
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: io.sentry.flutter.SentryFlutterPlugin this$0
io.sentry.flutter.R$attr: int fontProviderQuery
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $VALUES
com.google.crypto.tink.proto.KeyTemplate: int outputPrefixType_
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.EncryptedKeyset DEFAULT_INSTANCE
io.sentry.DataCategory: io.sentry.DataCategory Attachment
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
io.sentry.flutter.R$dimen: int notification_small_icon_size_as_large
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.window.embedding.SplitRule: int layoutDirection
com.google.crypto.tink.proto.AesSivKey: int KEY_VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.Instrumenter: io.sentry.Instrumenter[] $VALUES
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.sentry.flutter.R$id: int androidx_window_activity_scope
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.sentry.flutter.R$attr: int fontProviderCerts
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
io.sentry.SentryOptions: java.lang.String cacheDirPath
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int keySize_
io.sentry.flutter.R$dimen: int notification_large_icon_width
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.Keyset$Key DEFAULT_INSTANCE
io.sentry.Session$State: io.sentry.Session$State[] $VALUES
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.proto.KeysetInfo$KeyInfo DEFAULT_INSTANCE
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.proto.KmsAeadKeyFormat DEFAULT_INSTANCE
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.R$styleable: int[] SplitPairFilter
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: java.lang.String environment
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
io.sentry.flutter.R$id: int accessibility_custom_action_23
com.google.crypto.tink.proto.HmacParams: int hash_
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: int memoizedHashCode
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.sentry.flutter.R$styleable: int[] GradientColor
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int icon
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.sentry.SentryLevel: io.sentry.SentryLevel ERROR
io.sentry.flutter.R$layout: int notification_template_custom_big
io.sentry.SentryOptions: boolean enableDeduplication
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource CUSTOM
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type SCROLLABLE
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback tracesSampler
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.crypto.tink.proto.Keyset$Key: int status_
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleBreadcrumbs
io.sentry.DataCategory: io.sentry.DataCategory Transaction
io.sentry.DataCategory: java.lang.String category
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
io.sentry.flutter.R$attr: int fontVariationSettings
com.google.crypto.tink.proto.HmacParams: int tagSize_
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource VIEW
com.google.crypto.tink.proto.RegistryConfig: int CONFIG_NAME_FIELD_NUMBER
com.google.crypto.tink.proto.KeyTypeEntry: int TYPE_URL_FIELD_NUMBER
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.sentry.flutter.R$style: int Widget_Compat_NotificationActionText
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int HMAC_KEY_FIELD_NUMBER
io.sentry.Instrumenter: io.sentry.Instrumenter SENTRY
io.sentry.flutter.R$id: int action_container
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
kotlinx.coroutines.CancelledContinuation: int _resumed
io.sentry.flutter.R$id: int accessibility_custom_action_14
com.google.crypto.tink.proto.KeyTemplate: int VALUE_FIELD_NUMBER
io.sentry.SentryOptions: boolean enableUserInteractionBreadcrumbs
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
io.sentry.flutter.R$styleable: int Capability_shortcutMatchRequired
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: int memoizedSerializedSize
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.sentry.flutter.R$attr: int fontWeight
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.sentry.flutter.R$id: int accessibility_custom_action_16
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int version_
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration WEEK
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.HmacKey hmacKey_
com.google.crypto.tink.proto.AesEaxKey: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
io.sentry.SentryOptions: long flushTimeoutMillis
io.sentry.SentryOptions: java.util.List inAppIncludes
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.flutter.R$color: int notification_icon_bg_color
io.sentry.flutter.R$style: int Widget_Compat_NotificationActionContainer
io.sentry.flutter.R$id: int action_text
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Line2
io.sentry.android.core.SentryAndroidOptions: long anrTimeoutIntervalMillis
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int status_
androidx.window.core.Version: androidx.window.core.Version CURRENT
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.android.core.SentryAndroidOptions: boolean collectAdditionalContext
com.google.crypto.tink.proto.AesEaxKeyFormat: int keySize_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.google.crypto.tink.proto.Keyset$Key: int outputPrefixType_
com.google.crypto.tink.proto.AesCmacKey: int PARAMS_FIELD_NUMBER
io.sentry.flutter.R$id: int accessibility_custom_action_11
io.sentry.flutter.R$dimen: int notification_main_column_padding_top
io.sentry.flutter.R$attr: int secondaryActivityAction
kotlin.jvm.internal.CallableReference: java.lang.String signature
io.sentry.SentryOptions: boolean attachStacktrace
com.google.crypto.tink.proto.AesGcmSivKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$attr: int fontProviderAuthority
com.google.crypto.tink.proto.HmacKey: int VERSION_FIELD_NUMBER
io.sentry.flutter.R$id: int tag_accessibility_clickable_spans
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
io.sentry.flutter.R$styleable: int ColorStateListItem_alpha
com.google.crypto.tink.proto.AesGcmSivKey: int version_
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.crypto.tink.proto.AesCmacKeyFormat: int keySize_
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status NO_PERMISSION
com.google.crypto.tink.proto.HmacKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
io.sentry.flutter.SentryFlutterPlugin: java.lang.String nativeSdk
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.core.Version: int patch
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.crypto.tink.proto.KeyTemplate: int TYPE_URL_FIELD_NUMBER
com.google.crypto.tink.proto.AesGcmKeyFormat: int KEY_SIZE_FIELD_NUMBER
androidx.window.core.Version: java.lang.String description
io.sentry.flutter.R$styleable: int FontFamily_fontProviderQuery
io.sentry.flutter.R$id: int tag_state_description
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BYTE
io.sentry.flutter.R$styleable: int[] SplitPlaceholderRule
com.google.crypto.tink.proto.KeysetInfo: int PRIMARY_KEY_ID_FIELD_NUMBER
io.sentry.SentryOptions: java.lang.String release
io.sentry.SpanStatus: io.sentry.SpanStatus CANCELLED
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrHmacAeadKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.proto.KeyTypeEntry DEFAULT_INSTANCE
io.sentry.flutter.R$id: int accessibility_custom_action_27
io.sentry.SpanStatus: io.sentry.SpanStatus DATA_LOSS
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.Keyset: int KEY_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int keyId_
io.sentry.flutter.R$styleable: int ColorStateListItem_lStar
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration NANOSECOND
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
io.sentry.protocol.DebugImage: java.lang.String getUuid()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
io.sentry.SentryOptions: java.lang.String getProguardUuid()
io.sentry.SentryOptions: java.util.List getTracingOrigins()
androidx.window.embedding.SplitRule: SplitRule()
io.sentry.SentryOptions: boolean isEnableUncaughtExceptionHandler()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.sentry.flutter.SentryFlutterPlugin: void setContexts(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: java.lang.Object invoke(java.lang.Object)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
io.sentry.android.core.SentryAndroidOptions: void setEnableAutoActivityLifecycleTracing(boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.sentry.flutter.SentryFlutterPlugin: void clearBreadcrumbs(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: boolean isAttachScreenshot()
io.sentry.SentryOptions: void setProxy(io.sentry.SentryOptions$Proxy)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
io.sentry.SpanStatus: io.sentry.SpanStatus valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.sentry.protocol.DebugImage: void setUuid(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin: void setExtra(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: void invoke(int)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
io.sentry.flutter.SentryFlutterPlugin: io.sentry.SentryEvent initNativeSdk$lambda-1$lambda-0(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions,io.sentry.SentryEvent,io.sentry.Hint)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation valueOf(java.lang.String)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(java.lang.Integer,io.sentry.SpanStatus)
io.sentry.SentryOptions: void setAttachServerName(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
io.sentry.SentryOptions: javax.net.ssl.HostnameVerifier getHostnameVerifier()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.java.R: R()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.sentry.SentryOptions: void setReadTimeoutMillis(int)
androidx.window.core.Bounds: java.lang.String toString()
io.sentry.SentryOptions: SentryOptions(boolean)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.core.SentryAndroidOptions: boolean isAttachViewHierarchy()
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.sentry.SentryOptions: void addScopeObserver(io.sentry.IScopeObserver)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleTracingAutoFinish(boolean)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme[] values()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.sentry.android.core.SentryAndroidOptions: void setAttachScreenshot(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $values()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin: void setTag(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivityForConfigChanges()
io.sentry.SentryOptions: void setInstrumenter(io.sentry.Instrumenter)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
io.sentry.SentryOptions: void setTracingOrigins(java.util.List)
io.sentry.protocol.DebugImage: java.lang.String getImageAddr()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: void invoke(long)
io.sentry.SentryOptions: void addInAppExclude(java.lang.String)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] values()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
io.sentry.flutter.R$id: R$id()
io.sentry.flutter.SentryFlutterPlugin: void access$setFramesTracker$p(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.ActivityFramesTracker)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
io.sentry.flutter.SentryFlutterPlugin: SentryFlutterPlugin()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: SentryFlutterPlugin$initNativeSdk$2$18(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
io.sentry.Instrumenter: io.sentry.Instrumenter[] values()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.sentry.flutter.SentryFlutterPlugin: void fetchNativeAppStart(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: void setSentryClientName(java.lang.String)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType valueOf(java.lang.String)
androidx.window.embedding.SplitRule: int hashCode()
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType[] values()
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: void invoke(boolean)
io.sentry.protocol.DebugImage: java.lang.String getCodeFile()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.sentry.internal.gestures.UiElement$Type: UiElement$Type(java.lang.String,int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
kotlin.jvm.internal.Lambda: java.lang.String toString()
io.sentry.SentryOptions: void setPrintUncaughtStackTrace(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.sentry.protocol.Device$DeviceOrientation: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesHz()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason valueOf(java.lang.String)
io.sentry.Instrumenter: io.sentry.Instrumenter[] $values()
io.sentry.SentryOptions: boolean isSendDefaultPii()
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.sentry.SentryOptions: boolean isEnableUserInteractionTracing()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType valueOf(java.lang.String)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] values()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.sentry.flutter.SentryFlutterPlugin: void removeContexts$lambda-4(java.lang.String,io.flutter.plugin.common.MethodChannel$Result,io.sentry.Scope)
io.sentry.flutter.R$color: R$color()
io.sentry.SentryOptions: java.util.List getContextTags()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.sentry.protocol.TransactionNameSource: java.lang.String apiName()
io.sentry.flutter.SentryFlutterPlugin: void removeExtra(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
io.sentry.protocol.DebugImage: void setCodeId(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: SentryFlutterPlugin$initNativeSdk$2$19(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
io.sentry.android.core.internal.util.ConnectivityChecker$Status: ConnectivityChecker$Status(java.lang.String,int)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
io.sentry.protocol.DebugImage: void setArch(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivity()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType[] values()
io.sentry.SentryOptions: boolean containsIgnoredExceptionForType(java.lang.Throwable)
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy getProxy()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
io.sentry.android.core.SentryAndroidOptions: io.sentry.protocol.SdkVersion createSdkVersion()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: SentryFlutterPlugin$initNativeSdk$2$9(io.sentry.android.core.SentryAndroidOptions)
io.sentry.protocol.DebugImage: void setImageAddr(java.lang.String)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.sentry.SentryOptions: void setEnableAutoSessionTracking(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType valueOf(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.example.flutter_advanced_boilerplate.MainActivity: MainActivity()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: void invoke(boolean)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.sentry.SentryOptions: void setAttachThreads(boolean)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: SentryFlutterPlugin$initNativeSdk$2$7(io.sentry.android.core.SentryAndroidOptions)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: void invoke(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void access$setAutoPerformanceTrackingEnabled$p(io.sentry.flutter.SentryFlutterPlugin,boolean)
io.sentry.protocol.DebugImage: java.lang.String access$502(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.sentry.android.ndk.NativeScope: void nativeRemoveTag(java.lang.String)
io.sentry.SentryOptions: void setDiagnosticLevel(io.sentry.SentryLevel)
io.sentry.SentryOptions: int getReadTimeoutMillis()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.sentry.SentryOptions: void setBeforeSend(io.sentry.SentryOptions$BeforeSendCallback)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.sentry.SentryOptions: void setEnvelopeReader(io.sentry.IEnvelopeReader)
io.sentry.SentryOptions: void addTracingOrigin(java.lang.String)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.android.core.SentryAndroidOptions: boolean isCollectAdditionalContext()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
io.sentry.protocol.DebugImage: void setDebugFile(java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesIntervalMillis()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $values()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.sentry.SentryOptions: void setIdleTimeout(java.lang.Long)
io.sentry.flutter.R$string: R$string()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: void invoke(boolean)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
io.sentry.SentryOptions: java.lang.Double getSampleRate()
io.sentry.SentryOptions: boolean isEnableDeduplication()
io.sentry.SentryOptions: void setEnableNdk(boolean)
io.sentry.SentryOptions: java.lang.String getRelease()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.sentry.SentryOptions: void setMainThreadChecker(io.sentry.util.thread.IMainThreadChecker)
androidx.security.crypto.MasterKey$Builder$Api23Impl: java.lang.String getKeystoreAlias(android.security.keystore.KeyGenParameterSpec)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: void invoke(boolean)
io.sentry.android.core.SentryAndroidOptions: void setEnableAppLifecycleBreadcrumbs(boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: java.lang.Long getIdleTimeout()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.sentry.SentryOptions: boolean isTracingEnabled()
io.sentry.DataCategory: DataCategory(java.lang.String,int,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.SentryOptions: void setExecutorService(io.sentry.ISentryExecutorService)
io.sentry.android.core.SentryAndroidOptions: void setCollectAdditionalContext(boolean)
io.sentry.SentryOptions: void setServerName(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.window.core.Version: int getMinor()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
io.sentry.SentryOptions: void setEnableExternalConfiguration(boolean)
io.sentry.android.ndk.NativeModuleListLoader: io.sentry.protocol.DebugImage[] nativeLoadModuleList()
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryLevel getDiagnosticLevel()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.sentry.SentryItemType: io.sentry.SentryItemType valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.window.core.Version: int hashCode()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.sentry.vendor.gson.stream.JsonToken: JsonToken(java.lang.String,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.sentry.android.core.SentryAndroidOptions: void setAnrTimeoutIntervalMillis(long)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
io.sentry.flutter.SentryFlutterPlugin: void setContexts$lambda-3(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result,io.sentry.Scope)
io.sentry.android.ndk.SentryNdk: SentryNdk()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesIntervalMillis(int)
io.sentry.DataCategory: io.sentry.DataCategory[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: SentryFlutterPlugin$initNativeSdk$2$5(io.sentry.android.core.SentryAndroidOptions)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
io.sentry.SentryOptions: java.util.Set getIgnoredExceptionsForType()
io.sentry.SentryOptions: void setModulesLoader(io.sentry.internal.modules.IModulesLoader)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize valueOf(java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: SentryFlutterPlugin$initNativeSdk$2$4(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
androidx.window.core.Bounds: int getLeft()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: void invoke(java.lang.String)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.it_nomads.fluttersecurestorage.ciphers.KeyCipherAlgorithm: com.it_nomads.fluttersecurestorage.ciphers.KeyCipherAlgorithm valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.protocol.DebugImage: DebugImage()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
io.sentry.Instrumenter: Instrumenter(java.lang.String,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.protocol.DebugImage: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.sentry.SentryOptions: io.sentry.ISentryExecutorService getExecutorService()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.sentry.SentryOptions: void setEnableUserInteractionTracing(boolean)
io.sentry.SentryOptions: void addInAppInclude(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: SentryFlutterPlugin$initNativeSdk$2$1(io.sentry.android.core.SentryAndroidOptions)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.sentry.SentryOptions: void setConnectionTimeoutMillis(int)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
io.sentry.SentryOptions: void setEnableShutdownHook(boolean)
io.sentry.SentryOptions: boolean isSendClientReports()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int,int)
io.sentry.SpanStatus: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.sentry.SpanStatus: io.sentry.SpanStatus[] values()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType[] values()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
io.sentry.protocol.DebugImage: java.lang.Long access$702(io.sentry.protocol.DebugImage,java.lang.Long)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
io.sentry.flutter.SentryFlutterPlugin: void closeNativeSdk(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.sentry.flutter.SentryFlutterPlugin: void endNativeFrames(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableFramesTracking()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: SentryFlutterPlugin$initNativeSdk$2$8(io.sentry.android.core.SentryAndroidOptions)
androidx.window.core.Bounds: int hashCode()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
io.sentry.SentryOptions: void setMaxDepth(int)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
io.sentry.android.core.SentryAndroidOptions: void setEnableAppComponentBreadcrumbs(boolean)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] values()
io.sentry.protocol.DebugImage: java.lang.String access$302(io.sentry.protocol.DebugImage,java.lang.String)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.sentry.SentryOptions: boolean isTraceOptionsRequests()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
io.sentry.SentryOptions: java.lang.String getServerName()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendTransactionCallback getBeforeSendTransaction()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.embedding.SplitPairFilter: int hashCode()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableSystemEventBreadcrumbs()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.sentry.SentryOptions: void setProguardUuid(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppComponentBreadcrumbs()
io.sentry.SentryOptions: void setSampleRate(java.lang.Double)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
io.sentry.SentryOptions: void setBeforeSendTransaction(io.sentry.SentryOptions$BeforeSendTransactionCallback)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: void invoke(java.lang.String)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType[] values()
io.sentry.android.core.SentryAndroidOptions: SentryAndroidOptions()
io.sentry.SentryOptions: void setMaxBreadcrumbs(int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.sentry.MeasurementUnit$Duration: MeasurementUnit$Duration(java.lang.String,int)
androidx.window.embedding.SplitInfo: float getSplitRatio()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
io.sentry.SentryOptions: void setSessionTrackingIntervalMillis(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: SentryFlutterPlugin$initNativeSdk$2$10(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(int)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.sentry.SentryOptions: boolean isEnableAutoSessionTracking()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
io.sentry.SentryOptions: java.lang.String getOutboxPath()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.sentry.protocol.DebugImage: void setImageSize(long)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
io.sentry.SentryOptions: void addIgnoredExceptionForType(java.lang.Class)
io.sentry.protocol.DebugImage: java.lang.String access$602(io.sentry.protocol.DebugImage,java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.sentry.SentryLevel: io.sentry.SentryLevel[] $values()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: SentryFlutterPlugin$initNativeSdk$2$12(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: SentryFlutterPlugin$initNativeSdk$2$11(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback getTracesSampler()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.it_nomads.fluttersecurestorage.ciphers.KeyCipherAlgorithm: com.it_nomads.fluttersecurestorage.ciphers.KeyCipherAlgorithm[] values()
io.sentry.SentryOptions: java.lang.String getCacheDirPath()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: SentryFlutterPlugin$initNativeSdk$2$14(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.sentry.protocol.Device$DeviceOrientation: Device$DeviceOrientation(java.lang.String,int)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
io.sentry.flutter.SentryFlutterPlugin: void setEventEnvironmentTag(io.sentry.SentryEvent,java.lang.String,java.lang.String)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.R$attr: R$attr()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void addPackages(io.sentry.SentryEvent,io.sentry.protocol.SdkVersion)
io.sentry.SentryOptions: void setCacheDirPath(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.sentry.SentryOptions: void setMaxCacheItems(int)
androidx.window.core.Version: boolean equals(java.lang.Object)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.sentry.protocol.DebugImage: java.lang.String access$402(io.sentry.protocol.DebugImage,java.lang.String)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme valueOf(java.lang.String)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
io.sentry.protocol.DebugImage: void setCodeFile(java.lang.String)
io.sentry.SentryLevel: SentryLevel(java.lang.String,int)
io.sentry.SentryOptions: void setTracesSampler(io.sentry.SentryOptions$TracesSamplerCallback)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.sentry.SentryOptions: void setSendDefaultPii(boolean)
io.sentry.SentryOptions: boolean isEnableUserInteractionBreadcrumbs()
io.sentry.SentryOptions: void setGestureTargetLocators(java.util.List)
io.sentry.SentryOptions: void setDateProvider(io.sentry.SentryDateProvider)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.sentry.SpanStatus: boolean matches(int)
io.sentry.SentryOptions: boolean isTraceSampling()
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: SentryFlutterPlugin$initNativeSdk$2$15(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.sentry.SentryItemType: SentryItemType(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.sentry.SentryOptions: io.sentry.ITransportFactory getTransportFactory()
io.sentry.flutter.SentryFlutterPlugin: void removeContexts(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax[] values()
androidx.window.embedding.SplitRule: float getSplitRatio()
io.sentry.SentryOptions: SentryOptions()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
io.sentry.protocol.DebugImage: void setDebugId(java.lang.String)
io.sentry.SentryOptions: void setDistinctId(java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
io.sentry.SentryOptions: void setTransportGate(io.sentry.transport.ITransportGate)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.sentry.SentryOptions: void addContextTag(java.lang.String)
io.sentry.SentryOptions: long getSessionTrackingIntervalMillis()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $values()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
io.sentry.DataCategory: io.sentry.DataCategory[] $values()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.clientreport.DiscardReason: DiscardReason(java.lang.String,int,java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeRemoveExtra(java.lang.String)
io.sentry.SentryOptions: boolean isEnableScopeSync()
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.SentryOptions: boolean isAttachThreads()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.core.Version$Companion: Version$Companion()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.sentry.SentryOptions: int getMaxQueueSize()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
io.sentry.flutter.R$dimen: R$dimen()
io.sentry.android.core.SentryAndroidOptions: boolean isAnrEnabled()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.sentry.SentryOptions: java.lang.String getDistinctId()
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
io.sentry.protocol.TransactionNameSource: TransactionNameSource(java.lang.String,int)
io.sentry.SentryOptions: void setEnableScopeSync(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleBreadcrumbs(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.window.embedding.ActivityStack: int hashCode()
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
io.sentry.Session$State: io.sentry.Session$State[] values()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.sentry.SentryOptions: int getConnectionTimeoutMillis()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType[] values()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.sentry.SentryOptions: void setTag(java.lang.String,java.lang.String)
io.sentry.flutter.SentryFlutterPluginKt: void getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
io.sentry.SentryOptions: void setLogger(io.sentry.ILogger)
androidx.window.core.Version: java.lang.String toString()
androidx.core.content.FileProvider: FileProvider()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.SentryOptions: void addCollector(io.sentry.ICollector)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: void invoke(boolean)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.sentry.android.ndk.NativeScope: void nativeSetUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: void invoke(boolean)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.SentryItemType: io.sentry.SentryItemType valueOfLabel(java.lang.String)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
io.sentry.SentryOptions: boolean isDebug()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion getSdkVersion()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
io.sentry.SentryOptions: void setMaxTraceFileSize(long)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType valueOf(java.lang.String)
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int)
io.sentry.protocol.DebugImage: java.util.Map getUnknown()
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection[] values()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.sentry.SentryOptions: void setDebug(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType valueOf(java.lang.String)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] $values()
io.sentry.android.core.SentryAndroidOptions: void setStartupCrashFlushTimeoutMillis(long)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.sentry.SentryOptions: boolean isProfilingEnabled()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
io.sentry.flutter.SentryFlutterPlugin: void setEventEnvironmentTag$default(io.sentry.flutter.SentryFlutterPlugin,io.sentry.SentryEvent,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.window.embedding.SplitInfo: int hashCode()
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.sentry.SentryLevel: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
io.sentry.DataCategory: java.lang.String getCategory()
io.sentry.SentryOptions: void setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
io.sentry.SentryItemType: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
io.sentry.MeasurementUnit$Information: java.lang.String apiName()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: java.lang.Object invoke(java.lang.Object)
io.sentry.protocol.DebugImage: java.lang.String access$002(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
io.sentry.protocol.DebugImage: java.lang.String getType()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.window.core.Version: int getMajor()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: io.sentry.transport.ITransportGate getTransportGate()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type[] values()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.sentry.SentryOptions: java.util.Map getTags()
io.sentry.flutter.SentryFlutterPluginKt: void access$getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
io.sentry.SentryOptions: java.util.List getIntegrations()
io.sentry.SentryOptions: int getMaxDepth()
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
io.sentry.protocol.DebugImage: java.lang.String getDebugId()
io.sentry.flutter.SentryFlutterPlugin: void loadImageList(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.sentry.SentryOptions: java.util.List getGestureTargetLocators()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.R$id: R$id()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.sentry.android.ndk.NativeScope: void nativeAddBreadcrumb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] values()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: java.lang.Object invoke(java.lang.Object)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.sentry.SentryOptions: long getFlushTimeoutMillis()
io.sentry.protocol.DebugImage: void setImageSize(java.lang.Long)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: void setTransportFactory(io.sentry.ITransportFactory)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.sentry.android.ndk.NativeScope: void nativeSetTag(java.lang.String,java.lang.String)
io.sentry.SentryOptions: io.sentry.Instrumenter getInstrumenter()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.sentry.SentryOptions: long getShutdownTimeoutMillis()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api30Impl: void setUserAuthenticationParameters(android.security.keystore.KeyGenParameterSpec$Builder,int,int)
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType[] values()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: SentryFlutterPlugin$initNativeSdk$2$17(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
io.sentry.SentryOptions: long getShutdownTimeout()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.Lambda: int getArity()
io.sentry.SentryOptions: java.util.List getInAppIncludes()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: void invoke(java.lang.String)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: void invoke(java.lang.String)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
io.sentry.android.core.SentryAndroidOptions: void enableAllAutoBreadcrumbs(boolean)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.it_nomads.fluttersecurestorage.ciphers.StorageCipherAlgorithm: com.it_nomads.fluttersecurestorage.ciphers.StorageCipherAlgorithm valueOf(java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
io.sentry.android.ndk.NativeScope: void nativeSetExtra(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader getDebugImagesLoader()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] $values()
io.sentry.SentryItemType: io.sentry.SentryItemType[] $values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.sentry.MeasurementUnit$Information: MeasurementUnit$Information(java.lang.String,int)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.sentry.SentryOptions: void setSerializer(io.sentry.ISerializer)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] values()
io.sentry.SentryOptions: java.util.List getEventProcessors()
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback getBeforeSend()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.sentry.protocol.DebugImage: java.lang.String getArch()
io.sentry.SentryOptions: void setSendClientReports(boolean)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.sentry.SentryItemType: java.lang.String getItemType()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.sentry.protocol.DebugImage: void setUnknown(java.util.Map)
io.sentry.SentryOptions: void setEnableDeduplication(boolean)
io.sentry.SentryOptions: io.sentry.internal.modules.IModulesLoader getModulesLoader()
io.sentry.SentryOptions: long getMaxAttachmentSize()
io.sentry.android.core.SentryAndroidOptions: void setDebugImagesLoader(io.sentry.android.core.IDebugImagesLoader)
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder valueOf(java.lang.String)
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status[] $values()
io.sentry.protocol.DebugImage: java.lang.String getCodeId()
io.sentry.flutter.SentryFlutterPlugin: void captureEnvelope(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppLifecycleBreadcrumbs()
io.sentry.SentryOptions$RequestSize: SentryOptions$RequestSize(java.lang.String,int)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.MeasurementUnit$Fraction: java.lang.String apiName()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
io.sentry.SentryOptions: io.sentry.TransactionPerformanceCollector getTransactionPerformanceCollector()
io.sentry.SentryOptions: void setTraceSampling(boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder[] values()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
io.sentry.flutter.SentryFlutterPlugin: boolean writeEnvelope(byte[])
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.sentry.SentryLevel: io.sentry.SentryLevel[] values()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $values()
io.sentry.SentryOptions: io.sentry.ILogger getLogger()
androidx.window.embedding.MatcherUtils: MatcherUtils()
io.sentry.SentryOptions: void setBeforeBreadcrumb(io.sentry.SentryOptions$BeforeBreadcrumbCallback)
androidx.window.embedding.ActivityRule: int hashCode()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $values()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
io.sentry.SentryOptions: void setDist(java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] $values()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.window.core.Bounds: int getBottom()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: SentryFlutterPlugin$initNativeSdk$2$16(io.sentry.android.core.SentryAndroidOptions)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onResume(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.sentry.Session$State: Session$State(java.lang.String,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: void setProfilesSampler(io.sentry.SentryOptions$ProfilesSamplerCallback)
io.sentry.SentryOptions: int getMaxBreadcrumbs()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.sentry.SentryOptions: java.util.List getInAppExcludes()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.lifecycle.ProcessLifecycleOwner: ProcessLifecycleOwner()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: boolean isAnrReportInDebug()
io.sentry.SentryOptions: void setTraceOptionsRequests(boolean)
androidx.window.embedding.SplitInfo: java.lang.String toString()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
io.sentry.flutter.R$style: R$style()
io.sentry.android.ndk.SentryNdk: void shutdown()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.sentry.SentryOptions: void setMaxQueueSize(int)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
io.sentry.SentryOptions: boolean isEnableShutdownHook()
io.sentry.SentryOptions: java.util.List getScopeObservers()
io.sentry.protocol.DebugImage: java.lang.String access$802(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.SentryOptions: io.sentry.util.thread.IMainThreadChecker getMainThreadChecker()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashFlushTimeoutMillis()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder getClientReportRecorder()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.sentry.internal.gestures.UiElement$Type: io.sentry.internal.gestures.UiElement$Type valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType[] values()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAutoActivityLifecycleTracing()
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: java.lang.String getEnvironment()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.sentry.SentryOptions: void setProfilingEnabled(boolean)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: void invoke(boolean)
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
io.sentry.SentryOptions: void setMaxSpans(int)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme[] values()
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleTracingAutoFinish()
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.sentry.SentryOptions: java.util.List getCollectors()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.sentry.flutter.SentryFlutterPlugin: void removeTag(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.sentry.SentryOptions: void setTransactionProfiler(io.sentry.ITransactionProfiler)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitRule: int getMinWidth()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitController: SplitController()
io.sentry.Instrumenter: io.sentry.Instrumenter valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.sentry.flutter.R$layout: R$layout()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
io.sentry.protocol.DebugImage: java.lang.String access$102(io.sentry.protocol.DebugImage,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
io.sentry.android.core.SentryAndroidOptions: long getAnrTimeoutIntervalMillis()
io.sentry.protocol.DebugImage: java.lang.String access$202(io.sentry.protocol.DebugImage,java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: boolean isPrintUncaughtStackTrace()
io.sentry.SentryOptions: void setProfilesSampleRate(java.lang.Double)
io.sentry.SentryItemType: io.sentry.SentryItemType resolve(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
io.sentry.android.ndk.NativeScope: void nativeRemoveUser()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.sentry.SentryOptions: java.lang.String getProfilingTracesDirPath()
io.sentry.android.ndk.SentryNdk: void initSentryNative(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void setTracePropagationTargets(java.util.List)
io.sentry.flutter.SentryFlutterPlugin: void setEventOriginTag(io.sentry.SentryEvent)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.window.core.Bounds: int getHeight()
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback getProfilesSampler()
io.sentry.SentryOptions: io.sentry.ISerializer getSerializer()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
io.sentry.android.core.SentryAndroidOptions: void setEnableFramesTracking(boolean)
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize getMaxRequestBodySize()
androidx.window.core.Bounds: int getWidth()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
io.sentry.SentryOptions: void setMaxAttachmentSize(long)
io.sentry.flutter.R$styleable: R$styleable()
io.sentry.flutter.SentryFlutterPlugin: void addBreadcrumb(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.flutter.R: R()
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
io.sentry.protocol.DebugImage: java.lang.String getDebugFile()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
androidx.window.embedding.ActivityStack: boolean isEmpty()
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesHz(int)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache getEnvelopeDiskCache()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.sentry.protocol.DebugImage: java.lang.Long getImageSize()
io.sentry.SentryOptions: void setMaxRequestBodySize(io.sentry.SentryOptions$RequestSize)
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api28Impl: void setIsStrongBoxBacked(android.security.keystore.KeyGenParameterSpec$Builder)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.clientreport.DiscardReason: java.lang.String getReason()
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
io.sentry.SentryOptions: long getMaxTraceFileSize()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: void invoke(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setAnrReportInDebug(boolean)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion createSdkVersion()
io.sentry.flutter.R$attr: R$attr()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: void invoke(boolean)
io.sentry.flutter.BuildConfig: BuildConfig()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
io.sentry.SentryItemType: io.sentry.SentryItemType[] values()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme valueOf(java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
io.sentry.SpanStatus: io.sentry.SpanStatus[] $values()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.sentry.SentryOptions: boolean isAttachServerName()
androidx.window.core.Version: java.lang.String getDescription()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: void invoke(long)
androidx.window.core.Version: int getPatch()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
kotlin.jvm.internal.CallableReference: CallableReference()
io.sentry.android.core.SentryAndroidOptions: void setAnrEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.window.core.Bounds: boolean isEmpty()
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
io.sentry.flutter.R$drawable: R$drawable()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: SentryFlutterPlugin$initNativeSdk$2$6(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void setEnableUncaughtExceptionHandler(boolean)
com.it_nomads.fluttersecurestorage.ciphers.StorageCipherAlgorithm: com.it_nomads.fluttersecurestorage.ciphers.StorageCipherAlgorithm[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.sentry.SentryOptions: boolean isAttachStacktrace()
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax valueOf(java.lang.String)
io.sentry.SentryOptions: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.sentry.SentryOptions: void setAttachStacktrace(boolean)
io.sentry.android.core.SentryPerformanceProvider: SentryPerformanceProvider()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.sentry.MeasurementUnit$Fraction: MeasurementUnit$Fraction(java.lang.String,int)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk$lambda-1(java.util.Map,io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
io.sentry.SentryOptions: void setRelease(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
io.sentry.SentryOptions: io.sentry.SentryDateProvider getDateProvider()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.sentry.SentryOptions: java.lang.Double getTracesSampleRate()
io.sentry.protocol.DebugImage: void setType(java.lang.String)
io.sentry.MeasurementUnit$Duration: java.lang.String apiName()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.sentry.SentryOptions: void setEnableUserInteractionBreadcrumbs(boolean)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.window.R: R()
io.sentry.android.core.EmptySecureContentProvider: EmptySecureContentProvider()
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashDurationThresholdMillis()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.sentry.SentryLevel: io.sentry.SentryLevel valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.sentry.SentryOptions: void setFlushTimeoutMillis(long)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.sentry.SentryOptions: void setEnvironment(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setEnableSystemEventBreadcrumbs(boolean)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.sentry.SentryOptions: java.lang.String getDist()
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: SentryFlutterPlugin$initNativeSdk$2$2(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.sentry.SentryOptions: void setShutdownTimeout(long)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Bounds: boolean isZero()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.sentry.SentryOptions: io.sentry.ITransactionProfiler getTransactionProfiler()
androidx.window.core.Bounds: int getRight()
io.sentry.SentryOptions: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.sentry.SentryOptions: io.sentry.SentryOptions empty()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
io.sentry.android.ndk.SentryNdk: void close()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.sentry.SentryOptions: int getMaxSpans()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.sentry.SentryOptions: void setTracesSampleRate(java.lang.Double)
androidx.window.layout.WindowMetrics: java.lang.String toString()
io.sentry.SentryOptions: void setEnvelopeDiskCache(io.sentry.cache.IEnvelopeCache)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
io.sentry.flutter.SentryFlutterPlugin: void beginNativeFrames(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: java.lang.Double getProfilesSampleRate()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.sentry.Session$State: io.sentry.Session$State[] $values()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
io.sentry.SentryOptions: java.lang.String getSentryClientName()
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
io.sentry.Session$State: io.sentry.Session$State valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
io.sentry.android.ndk.SentryNdk: void init(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: io.sentry.IEnvelopeReader getEnvelopeReader()
io.sentry.android.core.SentryAndroidOptions: void setAttachViewHierarchy(boolean)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] values()
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
io.sentry.DataCategory: io.sentry.DataCategory valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.embedding.ActivityFilter: int hashCode()
io.sentry.SentryOptions: void addIntegration(io.sentry.Integration)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
io.sentry.SentryOptions: java.util.List getTracePropagationTargets()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.sentry.flutter.R$integer: R$integer()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: void setDsn(java.lang.String)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback getBeforeBreadcrumb()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: SentryFlutterPlugin$initNativeSdk$2$13(io.sentry.android.core.SentryAndroidOptions)
io.sentry.SentryOptions: void addEventProcessor(io.sentry.EventProcessor)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.window.core.Bounds: int getTop()
io.sentry.SentryOptions: int getMaxCacheItems()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: SentryFlutterPlugin$initNativeSdk$2$3(io.sentry.android.core.SentryAndroidOptions)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.R$styleable: R$styleable()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: void invoke(boolean)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
io.sentry.flutter.SentryFlutterPlugin: void setUser(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleBreadcrumbs()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: void invoke(boolean)
io.sentry.SentryOptions: void setShutdownTimeoutMillis(long)
io.sentry.SentryOptions: boolean isEnableExternalConfiguration()
io.sentry.SentryOptions: void merge(io.sentry.ExternalOptions)
io.sentry.SentryOptions: boolean isEnableNdk()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
io.sentry.SentryOptions: java.lang.String getDsn()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
